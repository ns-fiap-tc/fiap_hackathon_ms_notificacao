app.version=@project.version@
app.build.timestamp=@maven.build.timestamp@

server.port=8080
spring.application.name=@project.artifactId@
spring.application.description=@project.description@

management.endpoints.web.exposure.include=health

# Swagger
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs

# --- Metrics Configuration ---
management.metrics.distribution.percentiles-histograms=true
management.metrics.distribution.minimum-expected-value.http.server.requests=1ms
management.metrics.distribution.maximum-expected-value.http.server.requests=30s

# --- OTLP Export Configuration ---
# As configurações de endpoint, protocol e enabled vêm das variáveis de ambiente do Kubernetes
# MANAGEMENT_METRICS_EXPORT_OTLP_ENDPOINT=http://otel-collector.observability.svc.cluster.local:4318/v1/metrics
# MANAGEMENT_METRICS_EXPORT_OTLP_PROTOCOL=http/protobuf
# MANAGEMENT_METRICS_EXPORT_OTLP_ENABLED=true

# Intervalo de publicação das métricas (padrão é 1m, definimos 30s para feedback mais rápido)
management.otlp.metrics.export.step=30s

# --- Actuator Configuration ---
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true

# --- Common Tags ---
management.metrics.tags.application=notificacao-service
management.metrics.tags.environment=production

logging.level.root=INFO
# Habilita logs de debug para OTLP (remover após confirmar funcionamento)
logging.level.io.micrometer.registry.otlp=DEBUG
